version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: qr-menu-postgres
    environment:
      - POSTGRES_DB=qrmenudb
      - POSTGRES_USER=qrmenu_user
      - POSTGRES_PASSWORD=qrmenu_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - qr-menu-network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: qr-menu-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/qrmenudb
      - SPRING_DATASOURCE_USERNAME=qrmenu_user
      - SPRING_DATASOURCE_PASSWORD=qrmenu_password
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      # Base URL for QR codes and menu links - override this for production deployment
      - APP_BASE_URL=${APP_BASE_URL:-http://localhost}
      # Frontend URL for CORS - override this for production deployment  
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost}
    depends_on:
      - postgres
    networks:
      - qr-menu-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: qr-menu-frontend
    ports:
      - "80:8080"
    depends_on:
      - backend
    networks:
      - qr-menu-network
    restart: unless-stopped

networks:
  qr-menu-network:
    driver: bridge
    name: qr-menu-network

volumes:
  postgres_data:
    name: qr-menu-postgres-data