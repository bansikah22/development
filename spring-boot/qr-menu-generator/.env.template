# QR Menu Generator - Deployment Configuration Template
# Copy this file to .env and modify values for your environment

# =============================================================================
# DEPLOYMENT ENVIRONMENT CONFIGURATION
# =============================================================================

# Deployment environment (development, staging, production)
ENVIRONMENT=production

# Application domain (e.g., your-domain.com, ec2-instance.aws.com)
# Leave empty for localhost/IP-based deployment
APP_DOMAIN=

# =============================================================================
# BACKEND CONFIGURATION
# =============================================================================

# Backend port (default: 8080)
BACKEND_PORT=8080

# Database configuration for production
# For H2 file-based (default - no changes needed)
# DB_TYPE=h2

# For PostgreSQL (recommended for production)
# DB_TYPE=postgresql
# DB_HOST=localhost
# DB_PORT=5432
# DB_NAME=qrmenu
# DB_USERNAME=qrmenu_user
# DB_PASSWORD=secure_password

# For MySQL
# DB_TYPE=mysql
# DB_HOST=localhost
# DB_PORT=3306
# DB_NAME=qrmenu
# DB_USERNAME=qrmenu_user
# DB_PASSWORD=secure_password

# =============================================================================
# FRONTEND CONFIGURATION
# =============================================================================

# Frontend port (default: 80)
FRONTEND_PORT=80

# API URL override (optional - auto-detected if empty)
# Use this only if you have a custom API endpoint
# API_BASE_URL=https://api.your-domain.com

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

# Docker image tags
BACKEND_IMAGE_TAG=latest
FRONTEND_IMAGE_TAG=latest

# Resource limits
BACKEND_MEMORY_LIMIT=512m
FRONTEND_MEMORY_LIMIT=128m

# =============================================================================
# SSL/HTTPS CONFIGURATION (for production)
# =============================================================================

# SSL certificate paths (if using custom certificates)
# SSL_CERT_PATH=/path/to/cert.pem
# SSL_KEY_PATH=/path/to/key.pem

# Let's Encrypt email (for automatic SSL)
# LETSENCRYPT_EMAIL=admin@your-domain.com

# =============================================================================
# MONITORING & LOGGING
# =============================================================================

# Log level (DEBUG, INFO, WARN, ERROR)
LOG_LEVEL=INFO

# Enable monitoring endpoints
ENABLE_MONITORING=true

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# CORS allowed origins (comma-separated)
# Leave empty to allow same-origin only
CORS_ALLOWED_ORIGINS=

# JWT secret (if authentication is added later)
# JWT_SECRET=your-super-secret-key-change-this

# =============================================================================
# EXAMPLES FOR COMMON DEPLOYMENT SCENARIOS
# =============================================================================

# Example 1: AWS EC2 with public IP
# APP_DOMAIN=ec2-123-456-789-012.compute-1.amazonaws.com
# FRONTEND_PORT=80
# BACKEND_PORT=8080

# Example 2: Custom domain with SSL
# APP_DOMAIN=qrmenu.yourcompany.com
# FRONTEND_PORT=443
# LETSENCRYPT_EMAIL=devops@yourcompany.com

# Example 3: Behind load balancer/reverse proxy
# APP_DOMAIN=internal.qrmenu.com
# FRONTEND_PORT=8080
# API_BASE_URL=https://api.qrmenu.com

# Example 4: Docker Swarm/Kubernetes
# APP_DOMAIN=qrmenu.k8s.cluster
# BACKEND_IMAGE_TAG=v1.0.0
# FRONTEND_IMAGE_TAG=v1.0.0